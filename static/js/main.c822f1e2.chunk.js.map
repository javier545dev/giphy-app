{"version":3,"sources":["components/AddSearch.js","components/api/Api.js","components/GifItems.js","components/GifGrid.js","components/hooks/useFetchGits.js","Giphy.js","index.js"],"names":["AddSearch","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifItems","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGits","Giphy","categories","ReactDOM","render","document","getElementById"],"mappings":"oLAoCeA,EAhCG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,uBCRnBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAWH,GAFhD,+DAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAEFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAaXM,GAbW,4CAAH,sDCeJO,EAbE,SAACC,GAKd,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMN,IAAIR,IAAKiB,IAAKH,EAAMN,IAAIE,QACxC,4BAAKI,EAAMN,IAAIE,YCoBZQ,EAzBC,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECHJ,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPzB,EAAQC,GACPyB,MAAM,SAAAC,GACCC,QAAQC,IAAIF,GACZH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAACrB,IACGsB,EDZyBO,CAAc7B,GAAjCa,EAFe,EAEpBN,KAAac,EAFO,EAEPA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAG/CqB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEf,qBAAKA,UAAU,YAAf,SAGQJ,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CAEIA,IAAMA,GADCA,EAAIC,aEevBmB,EAhCD,WAAM,MAImB5C,mBAAS,CAAC,KAJ7B,mBAIV6C,EAJU,KAIE9C,EAJF,KAUhB,OACI,qCACG,sBAAKgC,UAAU,QAAf,UACI,8CACA,0BAEJ,sBAAKA,UAAU,UAAf,UACA,cAAC,EAAD,CAAWhC,cAAeA,IAC1B,6BACM8C,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEIA,SAAUA,GADLA,eCrB7BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.c822f1e2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport '../index.css'\r\n\r\nconst AddSearch = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 1 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddSearch.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddSearch","\r\nexport const getGif = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=AZytRligk5shvIpYGnCPuxIaSQ8742l0`\r\n    const resp = await fetch (url)\r\n    const { data } = await resp.json()\r\n\r\n    const gif = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gif\r\n}\r\n","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst GifItems = (props) => {  //({ img, title, url})\r\n\r\n    //console.log(props.img) //console.log({id, title, url})\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={props.img.url} alt={props.img.title} />\r\n            <p>{ props.img.title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItems\r\n\r\n\r\n//<div>\r\n    //<img src={url} alt={title} />\r\n    //<p>{title}</p>\r\n//</div>","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react'\r\nimport { useFetchGits } from '../components/hooks/useFetchGits'\r\nimport GifItems from './GifItems'\r\nimport '../index.css'\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const { data:images, loading} = useFetchGits( category )\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {\r\n                loading && <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n            }\r\n            <div className='card-grid'>\r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifItems\r\n                            key= { img.id }\r\n                            img={ img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default GifGrid","import { useEffect, useState } from 'react'\r\nimport { getGif } from '../api/Api'\r\n\r\nexport const useFetchGits = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect (() => {\r\n        getGif( category )\r\n        .then( imgs => {\r\n                console.log(imgs);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n        })\r\n    }, [category])\r\n    return state\r\n}"," import React, { useState } from 'react'\r\n import AddSearch from './components/AddSearch'\r\n import GifGrid from './components/GifGrid'\r\n import './index.css'\r\n\r\n const Giphy = () => {\r\n\r\n     //const categorias = [ 'Dragon Ball', 'Naruto', 'Bleach']\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [categories, setCategories] = useState([''])\r\n\r\n    //const handleAdd = () => {\r\n         //setCategorias ([ ...categorias, \"HunterX\"])\r\n         //setCategorias ( cats => [...categories, \"HunterX\"])\r\n    //}\r\n     return ( \r\n         <>\r\n            <div className='title'>\r\n                <h2>GiphyBrowser</h2>\r\n                <hr />\r\n            </div>\r\n            <div className='content'>\r\n            <AddSearch setCategories={setCategories} />\r\n            <ol>\r\n                { categories.map( category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n            </div>\r\n         </>\r\n     )\r\n } \r\n \r\n export default Giphy\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; \nimport Giphy from './Giphy';\n\nReactDOM.render(\n    <Giphy />,\n  document.getElementById('root')\n); "],"sourceRoot":""}